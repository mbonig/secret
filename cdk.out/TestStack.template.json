{
 "Resources": {
  "MySecret8FE80B51": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {}
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/Resource"
   }
  },
  "MySecretEventHandlerFunctionServiceRole69834666": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/EventHandlerFunction/ServiceRole/Resource"
   }
  },
  "MySecretEventHandlerFunctionServiceRoleDefaultPolicy9402D424": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:PutSecretValue",
        "secretsmanager:UpdateSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "MySecret8FE80B51"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "MySecret8FE80B51"
       }
      },
      {
       "Action": "secretsmanager:GetRandomPassword",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MySecretEventHandlerFunctionServiceRoleDefaultPolicy9402D424",
    "Roles": [
     {
      "Ref": "MySecretEventHandlerFunctionServiceRole69834666"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/EventHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MySecretEventHandlerFunction1FE2C50D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-071128183726-us-east-1",
     "S3Key": "9f9a35164e41fa82f0924329ba875624a8687a0ce8d0debc2b72396d07a527e2.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "MySecretEventHandlerFunctionServiceRole69834666",
      "Arn"
     ]
    },
    "Description": "src/EventHandler/EventHandler.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "MySecretEventHandlerFunctionServiceRoleDefaultPolicy9402D424",
    "MySecretEventHandlerFunctionServiceRole69834666"
   ],
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/EventHandlerFunction/Resource",
    "aws:asset:path": "asset.9f9a35164e41fa82f0924329ba875624a8687a0ce8d0debc2b72396d07a527e2.lambda",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MySecretCustomResourceProviderframeworkonEventServiceRoleD1046060": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/CustomResourceProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "MySecretCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy97BDCBE7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MySecretEventHandlerFunction1FE2C50D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MySecretEventHandlerFunction1FE2C50D",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MySecretCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy97BDCBE7",
    "Roles": [
     {
      "Ref": "MySecretCustomResourceProviderframeworkonEventServiceRoleD1046060"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/CustomResourceProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MySecretCustomResourceProviderframeworkonEvent7C84A81C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-071128183726-us-east-1",
     "S3Key": "8e3d635893ea17fa3158623489cd42c680fad925b38de1ef51cb10d84f6e245e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "MySecretCustomResourceProviderframeworkonEventServiceRoleD1046060",
      "Arn"
     ]
    },
    "Description": "AWS CDK resource provider framework - onEvent (TestStack/MySecret/CustomResourceProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "MySecretEventHandlerFunction1FE2C50D",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Runtime": "nodejs16.x",
    "Timeout": 900
   },
   "DependsOn": [
    "MySecretCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy97BDCBE7",
    "MySecretCustomResourceProviderframeworkonEventServiceRoleD1046060"
   ],
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/CustomResourceProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.8e3d635893ea17fa3158623489cd42c680fad925b38de1ef51cb10d84f6e245e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MySecretGenerateSecretStringCR9DD0E80D": {
   "Type": "Custom::GenerateSecretString",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "MySecretCustomResourceProviderframeworkonEvent7C84A81C",
      "Arn"
     ]
    },
    "Secret": {
     "Ref": "MySecret8FE80B51"
    },
    "GenerateSecretString": {
     "secretStringTemplate": "{\"username\":\"my-username\",\"password\":\"my-password\"}",
     "generateStringKey": "new-field",
     "excludePunctuation": true,
     "excludeNumbers": true,
     "excludeCharacters": "abc",
     "excludeUppercase": true,
     "passwordLength": 40
    }
   },
   "DependsOn": [
    "MySecretCustomResourceProviderframeworkonEvent7C84A81C",
    "MySecretCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy97BDCBE7",
    "MySecretCustomResourceProviderframeworkonEventServiceRoleD1046060",
    "MySecretEventHandlerFunction1FE2C50D",
    "MySecretEventHandlerFunctionServiceRoleDefaultPolicy9402D424",
    "MySecretEventHandlerFunctionServiceRole69834666",
    "MySecret8FE80B51"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TestStack/MySecret/GenerateSecretStringCR/Default"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/z2N0WrDMAxFv6Xvipq2DPa6FvZckg8IqqMFNbENlt0yjP99OGn3dM+9B6Ejfn5gu6OnNmacm0VumPtIZgZ66pCVTeColhxNHDD3a4fLj9uowEL2NhLm7+RMFO+qe3MBIYu58wvXec2rX8T81rpRAT0NpMpR8asG6AnPycwcz6RcoGP1KRiG1faRJnETmKTR2yG8pOI1+IeMHOCymv+r+vfFBZwfGe+6fxxbPByw3d1VpAnJRbGM3ZZ/uPjewRMBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "TestStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}